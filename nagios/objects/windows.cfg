###############################################################################
# WINDOWS.CFG - SAMPLE CONFIG FILE FOR MONITORING A WINDOWS MACHINE
#
# Last Modified: 06-13-2007
#
# NOTES: This config file assumes that you are using the sample configuration
#	 files that get installed with the Nagios quickstart guide.
#
###############################################################################




###############################################################################
###############################################################################
#
# HOST DEFINITIONS
#
###############################################################################
###############################################################################

# Define a host for the Windows machine we'll be monitoring
# Change the host_name, alias, and address to fit your situation

#define host{
#	use		windows-server	; Inherit default values from a template
#	host_name	winserver	; The name we're giving to this host
#	alias		My Windows Server	; A longer name associated with the host
#	address		10.200.198.101	; IP address of the host
#	}

define host{
	use		windows-server	; Inherit default values from a template
	host_name	guo	; The name we're giving to this host
	alias		guo	; A longer name associated with the host
	address		10.200.198.30	; IP address of the host
	}

define host{
        use             windows-server  ; Inherit default values from a template
        host_name       ars     ; The name we're giving to this host
        alias           ars     ; A longer name associated with the host
        address         10.200.198.14   ; IP address of the host
        }

define host{
        use             windows-server  ; Inherit default values from a template
        host_name       yangguangbm-db     ; The name we're giving to this host
        alias           ygbm-db     ; A longer name associated with the host
        address         10.200.198.134   ; IP address of the host
        }

#define host{
#	use		windows-server	; Inherit default values from a template
#	host_name	honeypot	; The name we're giving to this host
#	alias		winxp	; A longer name associated with the host
#	address		192.168.1.104	; IP address of the host
#	}


###############################################################################
###############################################################################
#
# HOST GROUP DEFINITIONS
#
###############################################################################
###############################################################################


# Define a hostgroup for Windows machines
# All hosts that use the windows-server template will automatically be a member of this group

define hostgroup{
	hostgroup_name	windows-servers	; The name of the hostgroup
	alias		Windows Servers	; Long name of the group
	}




###############################################################################
###############################################################################
#
# SERVICE DEFINITIONS
#
###############################################################################
###############################################################################


# Create a service for monitoring the version of NSCLient++ that is installed
# Change the host_name to match the name of the host you defined above

#define service{
#	use			generic-service
#	host_name		winserver
#	service_description	NSClient++ Version
#	check_command		check_nt!CLIENTVERSION
#	}
#define service {
#use generic-service
#host_name winserver
#service_description RAID_status
#check_command    check_nrpe!check_raid
#}
define service {
use generic-service
host_name guo
service_description RAID_status
check_command check_nrpe!check_raid
}
define service {
use generic-service
host_name guo
service_description hardware__status
check_command check_nrpe!check_hardware
}


define service {
use generic-service
host_name ars
service_description RAID_status
check_command check_nrpe!check_raid
}

define service {
use generic-service
host_name newoa
service_description RAID_status
check_command check_nrpe!check_raid
}


# Create a service for monitoring the uptime of the server
# Change the host_name to match the name of the host you defined above

#define service{
#	use			generic-service
#	host_name		winserver
#	service_description	Uptime
#	check_command		check_nt!UPTIME
#	}



# Create a service for monitoring CPU load
# Change the host_name to match the name of the host you defined above

#define service{
#	use			generic-service
#	host_name		winserver
#	service_description	CPU Load
#	check_command		check_nt!CPULOAD!-l 5,80,90
#	}



# Create a service for monitoring memory usage
# Change the host_name to match the name of the host you defined above

#define service{
#	use			generic-service
#	host_name		winserver
#	service_description	Memory Usage
#	check_command		check_nt!MEMUSE!-w 80 -c 90
#	}



# Create a service for monitoring C:\ disk usage
# Change the host_name to match the name of the host you defined above

#define service{
#	use			generic-service
#	host_name		winserver
#	service_description	C:\ Drive Space
#	check_command		check_nt!USEDDISKSPACE!-l c -w 80 -c 90
#	}



# Create a service for monitoring the W3SVC service
# Change the host_name to match the name of the host you defined above

#define service{
#	use			generic-service
#	host_name		winserver
#	service_description	W3SVC
#	check_command		check_nt!SERVICESTATE!-d SHOWALL -l W3SVC
#	}



# Create a service for monitoring the Explorer.exe process
# Change the host_name to match the name of the host you defined above

#define service{
#	use			generic-service
#	host_name		winserver
#	service_description	Explorer
#	check_command		check_nt!PROCSTATE!-d SHOWALL -l Explorer.exe
#	}


#define service{
#	use			generic-service
#	host_name		honeypot
#	service_description	Uptime
#	check_command		check_nt!UPTIME
#	}

