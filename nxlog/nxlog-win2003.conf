## This is a sample configuration file. See the nxlog reference manual about the
## configuration options. It should be installed locally and is also available
## online at http://nxlog.org/nxlog-docs/en/nxlog-reference-manual.html

## Please set the ROOT to the folder your nxlog was installed into,
## otherwise it will not start.

define ROOT C:\Program Files\nxlog
#define ROOT C:\Program Files (x86)\nxlog

Moduledir %ROOT%\modules
CacheDir %ROOT%\data
Pidfile %ROOT%\data\nxlog.pid
SpoolDir %ROOT%\data
LogFile %ROOT%\data\nxlog.log

<Extension charconv>
    Module      xm_charconv
    AutodetectCharsets utf-8, euc-jp, utf-16, utf-32, iso8859-2
</Extension>

# Create the parse rule for IIS logs. You can copy these from the header of the IIS log file.
<Extension w3c>
    Module xm_csv
    Fields $date, $time, $s-ip, $cs-method, $cs-uri-stem, $cs-uri-query, $s-port, $cs-username, $c-ip, $csUser-Agent, $sc-status, $sc-substatus, $sc-win32-status, $time-taken
    FieldTypes string, string, string, string, string, string, integer, string, string, string, integer, integer, integer, integer
    Delimiter ' '
</Extension>
 
<Extension json>
    Module      xm_json
</Extension>

<Extension _syslog>
    Module      xm_syslog
</Extension>

# Convert the IIS logs to JSON and use the original event time
<Input IIS_Logs>
   Module    im_file
   File    "C:\\inetpub\\logs\\LogFiles\\W3SVC1\\u_ex*"
   SavePos  TRUE
   
   Exec if $Message =~ /^#/ drop(); 				\
       else 							\
       { 							\
           w3c->parse_csv(); 					\
           $EventTime = parsedate($date + " " + $time); 	\
           $SourceName = "IIS";					\
           $Message = to_json();				\
       }
</Input>

# Convert the Tomcat logs
<Input Tomcat_Logs>
   Module    im_file
   File    "C:\\tomcat\\localhost_access_log.*"
   SavePos  TRUE
</Input>

# Convert the Apache logs
<Input Apache_Logs>
   Module    im_file
   File    "C:\\apache\\localhost_access_log.*"
   SavePos  TRUE
</Input>

<Input in>
#    Module      im_msvistalog
# For windows 2003 and earlier use the following:
   Module      im_mseventlog
   ReadFromLast TRUE
   SavePos     FALSE
   UTF8 TRUE
   
   Exec $Message = "[" + $FileName + "] [" + $EventType + "] [" + $EventID + "] "+ $Message;  
   Exec to_syslog_bsd();
</Input>

<Output out>
    Module      om_udp
    Host        192.168.100.136
    Port        514
</Output>

<Route 1>
    Path        in => out
</Route>

<Route 2>
   Path IIS_Logs => out
</Route>

<Route 3>
   Path Tomcat_Logs => out
</Route>

<Route 4>
   Path Apache_Logs => out
</Route>
